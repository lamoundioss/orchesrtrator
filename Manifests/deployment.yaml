# Gateway deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: orchestrator
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: api-gateway
                operator: In
                values:
                - api-gateway
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: api-gateway
        image: pasdev/crud_master-api-gateway:latest
        ports:
        - containerPort: 3000
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: orchestrator-configmap
              key: PORT
        - name: INVENTORY_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: orchestrator-configmap
              key: INVENTORY_SERVICE_URL
        - name: RABBITMQ_HOST
          value: "rabbitmq-service"
        - name: RABBITMQ_PORT
          valueFrom:
            configMapKeyRef:
              name: orchestrator-configmap
              key: RABBITMQ_PORT
        - name: RABBITMQ_USER
          value: "guest"
        - name: RABBITMQ_PASSWORD
          value: "guest"
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "300m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /api/movies
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/movies
            port: 3000
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3

---
# Inventory deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: inventory-app
  namespace: orchestrator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: inventory-app
  template:
    metadata:
      labels:
        app: inventory-app
    spec:
      containers:
      - name: inventory-app
        image: pasdev/crud_master-inventory-app:latest
        env:
        - name: FLASK_ENV
          value: "development"
        - name: INVENTORY_DB_HOST
          valueFrom:
            configMapKeyRef:
              name: orchestrator-configmap
              key: INVENTORY_DB_HOST
        - name: INVENTORY_DB_PORT
          valueFrom:
            configMapKeyRef:
              name: orchestrator-configmap
              key: INVENTORY_DB_PORT
        - name: INVENTORY_DB_USER
          valueFrom:
            configMapKeyRef:
              name: orchestrator-configmap
              key: INVENTORY_DB_USER
        - name: INVENTORY_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: orchestrator-secret
              key: INVENTORY_DB_PASSWORD
        - name: INVENTORY_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: orchestrator-configmap
              key: INVENTORY_DB_NAME
        ports:
        - containerPort: 8080


---
# RabbitMQ deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
  namespace: orchestrator
  labels:
    app: rabbitmq
spec:
  replicas: 3
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: rabbitmq
                operator: In
                values:
                - rabbitmq
            topologyKey: "kubernetes.io/hostname"
      containers:
      - image: rabbitmq:3-management
        name: rabbitmq-app
        ports:
        - containerPort: 5672
        - containerPort: 15672
        env:
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: orchestrator-secret
              key: RABBITMQ_PASSWORD
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: orchestrator-secret
              key: RABBITMQ_USER
        envFrom:
        - configMapRef:
            name: orchestrator-configmap


