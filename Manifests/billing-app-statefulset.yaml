apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: billing-app
  namespace: orchestrator
  labels:
    app: billing-app
spec:
  serviceName: billing-service
  replicas: 1
  selector:
    matchLabels:
      app: billing-app
  template:
    metadata:
      labels:
        app: billing-app
    spec:
      containers:
      - name: billing-app
        image: lamoundios7/billing-app
        ports:
        - containerPort: 8080
        env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              name: orchestrator-secret
              key: RABBITMQ_DEFAULT_USER
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: orchestrator-secret
              key: RABBITMQ_DEFAULT_PASS
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: orchestrator-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: orchestrator-secret
              key: POSTGRES_USER
        envFrom:
          - configMapRef:
              name: orchestrator-configmap
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        # Waiting for the database to be available
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "Waiting for database at ${BILLING_DB_HOST}:${BILLING_DB_PORT}..."
          timeout=120
          counter=0
          while ! nc -z ${BILLING_DB_HOST} ${BILLING_DB_PORT}; do
            sleep 5
            counter=$((counter+5))
            if [ $counter -ge $timeout ]; then
              echo "Timeout waiting for database connection!"
              exit 1
            fi
            echo "Still waiting for database... ($counter seconds elapsed)"
          done
          echo "Database is available, starting application..."
          # DÃ©marrer l'application Python
          exec venv/bin/python server.py